<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Expiration_Email</name>
        <label>Send Expiration Email</label>
        <locationX>584</locationX>
        <locationY>1060</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Create_Email_Message</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>textT_ExpirationNoticeEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>colChoice_RecipientEmails</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>clmintegration@iqvia.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>IQVIA Contract Expiration Early Notice</stringValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Set_Agreement_Contacts_Emails</name>
        <label>Set Agreement Contacts Emails</label>
        <locationX>918</locationX>
        <locationY>789</locationY>
        <assignmentItems>
            <assignToReference>colChoice_RecipientEmails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Through_Agreement_Contacts.Email__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varT_EmailId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Through_Agreement_Contacts.Contact__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varT_EmailId</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>;</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>colChoice_ContactIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Through_Agreement_Contacts.Contact__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Agreement_Contacts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Owner_Email</name>
        <label>Set Owner Email</label>
        <locationX>584</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>colChoice_RecipientEmails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varT_EmailId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>colChoice_ContactIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Expiration_Email</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>Sort_Agreement_Contacts</name>
        <elementSubtype>SortCollectionProcessor</elementSubtype>
        <label>Sort Agreement Contacts</label>
        <locationX>578</locationX>
        <locationY>575</locationY>
        <collectionProcessorType>SortCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_Agreement_Contacts</collectionReference>
        <connector>
            <targetReference>Is_RecordType_AMESA</targetReference>
        </connector>
        <limit>4</limit>
        <sortOptions>
            <doesPutEmptyStringAndNullFirst>false</doesPutEmptyStringAndNullFirst>
            <sortField>Agreement__c</sortField>
            <sortOrder>Asc</sortOrder>
        </sortOptions>
    </collectionProcessors>
    <decisions>
        <name>Is_RecordType_AMESA</name>
        <label>Is RecordType AMESA?</label>
        <locationX>573</locationX>
        <locationY>742</locationY>
        <defaultConnector>
            <targetReference>Loop_Through_Agreement_Contacts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>RWSSOW</defaultConnectorLabel>
        <rules>
            <name>AMESA</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Record_Type_Developer_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AMESA</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Owner_Email</targetReference>
            </connector>
            <label>AMESA</label>
        </rules>
    </decisions>
    <description>CLM-MC-CLMCMA-13081 - This flow is used to send expiration email to agreement owner and agreement contacts.</description>
    <environments>Default</environments>
    <formulas>
        <name>forT_RecordLink</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_260}, FIND( &apos;/services&apos;, {!$Api.Partner_Server_URL_260})) + {!$Record.Id}</expression>
    </formulas>
    <interviewLabel>CLM Agreement Expiration Notification Scheduled Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CLM Agreement Expiration Notification Scheduled Flow</label>
    <loops>
        <name>Loop_Through_Agreement_Contacts</name>
        <label>Loop Through Agreement Contacts</label>
        <locationX>749</locationX>
        <locationY>794</locationY>
        <collectionReference>Get_Agreement_Contacts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Set_Agreement_Contacts_Emails</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Set_Owner_Email</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Email_Message</name>
        <label>Create Email Message</label>
        <locationX>583</locationX>
        <locationY>1211</locationY>
        <inputAssignments>
            <field>FromAddress</field>
            <value>
                <stringValue>clmintegration@iqvia.com</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>HtmlBody</field>
            <value>
                <elementReference>textT_ExpirationNoticeEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedToId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>3</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>IQVIA Contract Expiration Early Notice</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ToAddress</field>
            <value>
                <elementReference>varT_EmailId</elementReference>
            </value>
        </inputAssignments>
        <object>EmailMessage</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Agreement_Contacts</name>
        <label>Get Agreement Contacts</label>
        <locationX>571</locationX>
        <locationY>444</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Sort_Agreement_Contacts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Agreement__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Inactive__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>IQVIA User Contact</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Agreement_Contacts__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>449</locationX>
        <locationY>48</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterFormula>AND(NOT({!$Setup.Trigger_Control_For_Migration__c.Disable_Agreement_Trigger__c}), OR({!$Record.RecordType.DeveloperName} == &apos;AMESA&apos;, {!$Record.RecordType.DeveloperName} == &apos;RWSSOW&apos;),
AND(NOT(ISBLANK({!$Record.Apttus__Contract_End_Date__c})), NOT(ISBLANK(TEXT({!$Record.Apttus__Owner_Expiration_Notice__c})))))</filterFormula>
        <object>Apttus__APTS_Agreement__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>Scheduled_Expiry_Date</name>
            <connector>
                <targetReference>Get_Agreement_Contacts</targetReference>
            </connector>
            <label>Scheduled Expiry Date</label>
            <offsetNumber>0</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>Expiration_Notice_Date__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>textT_ExpirationNoticeEmail</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>&lt;img src = &quot;https://iqvia.lightning.force.com/file-asset-public/Logo11?oid=00D6A000001Vlzd&quot; height=&quot;100px&quot; width=&quot;150px&quot;&gt;
&lt;p&gt;Dear {!$Record.Owner:User.FirstName} {!$Record.Owner:User.LastName},&lt;br&gt;
The following IQVIA contract is going to expire in {!$Record.Apttus__Owner_Expiration_Notice__c}&lt;br&gt;&lt;br&gt;
Number: {!$Record.Apttus__FF_Agreement_Number__c}&lt;br/&gt;
Name: {!$Record.Name}&lt;br/&gt;
Start Date: {!$Record.Apttus__Contract_Start_Date__c}&lt;br/&gt;
End Date: {!$Record.Apttus__Contract_End_Date__c}&lt;br/&gt;
Link: {!forT_RecordLink}&lt;br/&gt;&lt;br/&gt;
Thank You,&lt;br/&gt;
IQVIA&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>colChoice_ContactIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colChoice_RecipientEmails</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varT_EmailId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
